<link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>

<style>
    .icon.activityicon.nofilter {
        width: 50px !important;
        height: 50px;
    }

    .activity-header {
        display: none;
    }

    .ml-wrapper {
        max-width: 830px;
        margin: 0 auto;
    }

    .ml-content {
        margin-top: 30px;
        padding: 20px 15px;
    }

    .ml-content.ml-content-assign {
        background-color: #F8F9FA;
        border-radius: 20px;
    }

    .ml-content.ml-content-control {
        padding: 0px;
    }

    .ml-content.ml-content-summary {
        margin-top: 40px;
        padding: 0px;
    }

    .ml-content.ml-grading {
        background-color: #F8F9FA;
        border-radius: 20px;
    }


    .ml-assign-description-title {
        font-size: 20px;
    }

    .ml-assign-description-content {
        font-size: 16px;
    }

    .ml-button {
        text-decoration: none;
        color: #333;
        background-color: #CED4DA;
        padding: 8px 15px;
        border-radius: 10px;
        margin-right: 10px;
        cursor: pointer;
        transition: opacity linear 0.2s;
        outline: none;
        border: none;
    }

    .ml-button:hover {
        text-decoration: none;
        color: #333;
        opacity: 0.8;
    }

    .ml-button.ml-button--edit {
        color: #fff;
        background-color: #0F6CBF;
    }

    .ml-summary-title {
        font-size: 28px;
        margin-bottom: 20px;
    }

    .ml-summary-table {
        width: 100%;
        font-size: 16px;
    }

    .ml-summary-table td, .ml-summary-table th {
        padding: 5px 10px;
    }

    .ml-summary-table th {
        border: 1px solid #DFE3E6;
        color: #555;
        background-color: #F7F7F7;
    }

    .ml-summary-table td {
        border: 1px solid #DFE3E6;
        color: #555;
        background-color: #fff;
    }

    .ml-summary-table tr:nth-child(2) td{
        background-color: #fff;
    }

    /*  Grading side */
    .ml-grading-title {
        margin-bottom: 20px;
    }

    .ml-form {

    }

    .ml-feedback-label {
        display: block;
    }

    .ml-form-feedback {
        width: 100%;
        height: 250px;
        padding: 20px;
        font-size: 16px;
        border: 2px solid #ccc;
        border-radius: 10px;
        background-color: #fff;
        color: #333;
        resize: none;
        margin-bottom: 20px;
    }

    .ml-button--extra {
        background-color: rgba(239, 85, 125, 0.85);
        color: #fff;
    }

    .ml-button--extra:hover {
        color: #fff;
    }

    /* Loading animation  */
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: #fff; /* Màu nền đục */
        display: none;
        justify-content: center;
        align-items: center;
        flex-direction: column-reverse;
        z-index: 99; /* Đảm bảo hiển thị phía trên tất cả các phần tử khác */
    }

    .loading-spinner {
        border: 4px solid #f3f3f3;
        border-top: 4px solid #3498db; /* Màu của vòng quay */
        border-radius: 50%;
        width: 40px;
        height: 40px;
        z-index: 100;
        animation: spin 2s linear infinite; /* Tạo hiệu ứng quay */
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .ml-answer-wrapper {
        margin-bottom: 10px;
    }

    .ml-english-grammar-check {
        margin-top: 10px;
        line-height: 30px;
    }

    .ml-english-grammar-check span {
        padding: 2px 5px;
        border-radius: 5px;
        margin: 2px;
    }

    .ml-error-word {
        background-color: #FF8080;
        text-decoration: line-through;
    }

    .ml-correct-word {
        background-color: #CDFAD5;
    }

    .ml-factcheck-entailment {
        background-color: #CDFAD5;
        padding: 20px;
        border-radius: 10px;
    }

    .ml-factcheck-neutral {
        background-color: #F6FDC3;
        padding: 20px;
        border-radius: 10px;
    }

    .ml-factcheck-contradiction {
        background-color: #FF8080;
        padding: 20px;
        border-radius: 10px;
    }

    .ml-ai-question {
        font-size: 16px;
        font-weight: 600;
    }

    .ml-factcheck-available {
        position: relative;
        margin-top: 30px;
        border: 1px solid #888;
    }

    .ml-answer-label {
        position: absolute;
        left: 30px;
        top: -22px;
        padding: 0 20px;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
        font-weight: 700;

        border-top-width: 1px;
        border-top-color: #888;
        border-top-style: solid;

        border-right-width: 1px;
        border-right-color: #888;
        border-right-style: solid;

        border-left-width: 1px;
        border-left-color: #888;
        border-left-style: solid;

    }

    .ml-answer-label--entailment {
        background-color: #CDFAD5;
    }

    .ml-answer-label--neutral {
        background-color: #F6FDC3;
    }

    .ml-answer-label--contradiction {
        background-color: #FF8080;
    }


</style>

<div class="ml-wrapper">
    <!-- Summary assignment-->
    <div class="ml-content ml-content-summary">
        <div class="ml-summary">
            <h2 class="ml-summary-title">
                Grade Assignment
            </h2>
        </div>
    </div>
    {{^ vietnamese_assign }}
    <div class="ml-content ml-content-assign">
        <div class="ml-assign-description">
            <h2 class="ml-assign-description-title">Assignment Instructions</h2>
            {{# manual_assign }}
                <p class="ml-assign-file-title">{{ question }}</p>
            {{/manual_assign}}
            {{# ai_assign }}
            <p class="ml-assign-file-title">Read the following file and answer the questions:</p>
            <a class="ml-assign-file" href="{{ file_path }}" target="_blank">
                <i class='ml-assign-file-icon bx bx-file'></i>
                {{ file_name }}
            </a>
            {{/ai_assign}}
        </div>
    </div>
    {{/vietnamese_assign}}

    <div class="ml-content ml-grading ml-content-assign">
        <h2 class="ml-assign-description-title ml-grading-title">Participant Submission</h2>
        {{# manual_assign }}
            <p class="ml-writing-answer">{{ writing_answer }}</p>
        {{/ manual_assign }}
        {{# ai_assign }}
            {{# information }}
                <p class="ml-ai-question">{{ id }}. {{ question }}</p>
                <div class="ml-answer-wrapper
                            {{# factcheck }}ml-factcheck-{{ factcheck }} ml-factcheck-available{{/ factcheck }}">
                    <b>Answer: </b><span class="ml-answer">{{ answer }}</span>
                    {{# factcheck }}
                    <span class="ml-answer-label
                        {{# factcheck }}ml-answer-label--{{ factcheck }}{{/ factcheck }}">
                        {{ factcheck }}
                    </span>
                    {{/ factcheck }}
                </div>
                <p><b>Summary for teacher: </b>{{ summary }}</p>
            {{/information}}

            {{# summarizes }}
                <p style="display: none" class="ml-summarize">{{ summarize }}</p>
            {{/ summarizes }}
        {{/ai_assign}}

        {{# vietnamese_assign}}
            {{# vietnamese_questions }}
                <p class="ml-ai-question">{{ id }}. {{ question }}</p>
                <div class="ml-answer-wrapper">
                    <b>Answer: </b><span class="ml-answer">{{ answer }}</span>
                <p><b>Corrected Answer: </b>{{ corrected_answer }}</p>
            {{/vietnamese_questions}}
        {{/ vietnamese_assign}}
    </div>
    {{# manual_assign }}

<!-- Có correct answer mới hiển thị grammar check   -->
    {{#correct_answer }}
    <div class="ml-content ml-grading ml-content-assign ml-english">
        <h2 class="ml-assign-description-title ml-english-title">Grammar Check</h2>

            <div class="ml-english-grammar-check">
                {{{ correct_answer }}}
            </div>

    </div>
    {{# has_tenses }}
    <div class="ml-content ml-grading ml-content-assign ml-english">
        <h2 class="ml-assign-description-title ml-english-title">Tenses you should review</h2>
        {{# tenses }}
        <ul class="ml-english-grammar-check">
            <li>{{ tense }} (Wrong sentence: {{ frequency }})</li>
        </ul>
        {{/tenses}}
    </div>
    {{/has_tenses}}

    <!-- Có điểm CEFR mới hiện thị CEFR  -->
    {{# cefr }}
    <div class="ml-content ml-grading ml-content-assign ml-english">
        <h2 class="ml-assign-description-title ml-english-title">CEFR Level</h2>
        <div class="ml-english-CEFR">
            <span class="ml-english-CEFR-title">CEFR: </span>
            <span class="ml-english-CEFR-grade">{{ cefr }}</span>
        </div>
    </div>
    {{/ cefr }}


    {{/correct_answer}}
    {{/manual_assign}}

    <div class="ml-content ml-form">
        <h2 class="ml-assign-description-title ml-grading-title">Grade</h2>
        <form class="ml-form-form" action="" method="POST">
            <div class="ml-form-group">
                <label for="grade">Grade out of 100: </label>
                <input class="ml-form-grade" type="text" name="grade" id="grade"
                    {{# old_grade }} value="{{ old_grade }}" {{/old_grade}}
                >
            </div>
            <div class="ml-form-group">
                <label class="ml-feedback-label" for="feedback">Feedback comments</label>
                <textarea class="ml-form-feedback" onfocusin="removeLeadingTrailingSpaces(this);"
                          name="feedback" id="feedback" cols="30" rows="10" class="ml-0">
                    {{# old_feedback }}{{ old_feedback }}{{/old_feedback}}
                </textarea>
                <textarea style="display: none" class="ml-factcheck"
                          name="factcheck" id="" cols="30" rows="10"
                          data-factcheck="{{ is_factcheck }}"
                >
                </textarea>
                <input style="display: none" type="text" name="is-factcheck" class="ml-is-factcheck">
            </div>

            <div class="ml-form-group">
                <a href="http://localhost/mod/demo/view.php?id={{ module_instance_id }}&action=viewsub" class="ml-button">Back</a>
                <input class="ml-button ml-button--edit ml-form-submit" type="submit"
                    {{# old_grade }} value="Save changes" {{/old_grade}}
                    {{^ old_grade }} value="Grade Manually" {{/old_grade}} ">
                <span class="ml-button ml-button--extra {{# manual_assign }}ml-grammar-check{{/manual_assign}}{{# ai_assign }}ml-factcheck-button{{/ai_assign}}" >Help Grading with AI</span>
            </div>

        </form>

    </div>
</div>


<script>
    // HIệu ứng loading
    // Hiệu ứng loading
    const loadingOverlay = document.createElement("div");
    loadingOverlay.className = "loading-overlay";
    loadingOverlay.innerText = "Fact Check Questions...";

    let grammarCheckButton = document.querySelector('.ml-grammar-check')
    if (grammarCheckButton) {
        loadingOverlay.innerText = "Grammar Check Questions...";
    }
    const loadingProgress = document.createElement("div");
    loadingProgress.className = "loading-spinner";
    loadingOverlay.appendChild(loadingProgress);
    document.body.appendChild(loadingOverlay);
    // Hiển thị hiệu ứng "loading"
    function showLoading() {
        console.log('Loading...... cực cháy')
        document.querySelector('.loading-overlay').style.display = 'flex';
    }
    // Ẩn hiệu ứng "loading"
    function hideLoading() {
        document.querySelector('.loading-overlay').style.display = 'none';
    }

    // Call api grammar check
    let submitButton = document.querySelector('.ml-form-submit')


    if (grammarCheckButton) {
        // loadingOverlay.innerText = "Grammar Check Questions...";
        let studentAnswer = document.querySelector('.ml-writing-answer').textContent
        grammarCheckButton.onclick = async function() {
            showLoading()
            const response = await fetch('http://localhost:5000/grammar-analysis', {
                method: 'POST',
                body: JSON.stringify({
                    student_answer: studentAnswer,
                }),
                headers: {
                    'Content-Type': 'application/json'
                },
                mode: 'cors'
            })
            const data = await response.json()
            let grammarCheck = JSON.stringify(data)
            let grammarCheckInput = document.querySelector('.ml-factcheck')
            grammarCheckInput.value = grammarCheck

            let factCheckToServer = document.querySelector('.ml-is-factcheck')
            factCheckToServer.value = 'true'
            submitButton.click()
        }
    }



    // Call api factcheck
    let studentAnswers = document.querySelectorAll('.ml-answer')
    let summarizes = document.querySelectorAll('.ml-summarize')

    result = []
    async function fetchAndProcessRequests() {
        showLoading()
        for (let i = 0; i < studentAnswers.length; i++) {
            let studentAnswer = studentAnswers[i].textContent
            let summarize = summarizes[i].textContent

            const response = await fetch('http://localhost:5000/check-legit-answer', {
                method: 'POST',
                body: JSON.stringify({
                    student_answer: studentAnswer,
                    summarize: summarize
                }),
                headers: {
                    'Content-Type': 'application/json'
                },
                mode: 'cors'
            })
            const data = await response.json()
            result.push(data)
        }

        let factCheck = JSON.stringify(result)
        let factCheckInput = document.querySelector('.ml-factcheck')
        factCheckInput.value = factCheck

        let factCheckToServer = document.querySelector('.ml-is-factcheck')
        factCheckToServer.value = 'true'

        submitButton.click()
    }

    let factCheckButton = document.querySelector('.ml-factcheck-button')
    if (factCheckButton) {
        factCheckButton.onclick = async function() {
            console.log('đã click')
            await fetchAndProcessRequests()

        }
    }



    // Xử lý khi focus vào textarea
    function removeLeadingTrailingSpaces(textarea) {
        textarea.value = textarea.value.trim();
    }

    // Xử lý xóa dấu cách của textarea khi trang vừa tải xong
    document.addEventListener("DOMContentLoaded", function() {
        let textarea = document.querySelector('.ml-form-feedback')
        removeLeadingTrailingSpaces(textarea);
    });

    // Change icon AI Assignment
    let img = document.querySelector('.icon.activityicon.nofilter')
    img.src = "https://thumbs.dreamstime.com/b/artificial-intelligence-ai-processor-chip-vector-icon-symbol-graphic-design-logo-web-site-social-media-mobile-app-ui-158205566.jpg"

    // Change module Name
    // Change module Name
    let moduleName = document.querySelector('.active.active_tree_node.nav-link')
    moduleName.innerText = 'AI Assignment'
</script>